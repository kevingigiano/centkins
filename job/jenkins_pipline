pipeline {
    agent any
    tools {
        gradle "Default"
    }
    parameters {
        booleanParam(name: 'build_python', defaultValue: false, description: 'Build Python')
    }
    stages {
        stage('Build Python') {
            steps {
                script {
                    if (build_python.toBoolean()){
                        try {
                            def build_output = sh(label: '', returnStdout: true, script: '''
                            #!/bin/bash
                            
                            echo "Building Python from source"
                            
                            WORKDIR=$(pwd)
                            cd /tmp/
                            wget https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz
                            tar xzf Python-3.8.8.tgz
                            
                            cd Python-3.8.8
                            ./configure --prefix=/opt/python38
                            make -j 8
                            make altinstall
                            
                            tar cvf python38.tar.gz -C /opt python38
                            cp python38.tar.gz $WORKDIR
                            ''')
                        }
                        catch (err) {
                            echo err.getMessage()
                            echo "Error detected, but will continue to next stage."
                        }
                    }
                }
            }
        }
        stage('Gradle') {
            steps {
                sh './gradlew python_rpm'
            }
        }
    }
}

